<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csswust.patest2.dao.UserLoginLogDao">
    <resultMap id="BaseResultMap" type="com.csswust.patest2.entity.UserLoginLog">
        <id column="use_log_id" property="useLogId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="login_ip" property="loginIp" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        use_log_id, user_id, login_ip, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_login_log
        where use_log_id = #{useLogId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_login_log
        where use_log_id = #{useLogId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.csswust.patest2.entity.UserLoginLog" useGeneratedKeys="true"
            keyProperty="useLogId">
        insert into user_login_log (user_id, login_ip, create_time
        )
        values (#{userId,jdbcType=INTEGER}, #{loginIp,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.csswust.patest2.entity.UserLoginLog" useGeneratedKeys="true"
            keyProperty="useLogId">
        insert into user_login_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="loginIp != null">
                login_ip,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="loginIp != null">
                #{loginIp,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.csswust.patest2.entity.UserLoginLog">
        update user_login_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where use_log_id = #{useLogId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.csswust.patest2.entity.UserLoginLog">
        update user_login_log
        set user_id = #{userId,jdbcType=INTEGER},
        login_ip = #{loginIp,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where use_log_id = #{useLogId,jdbcType=INTEGER}
    </update>
</mapper>