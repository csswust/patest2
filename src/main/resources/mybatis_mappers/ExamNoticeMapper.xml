<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csswust.patest2.dao.ExamNoticeDao" >
    <resultMap id="BaseResultMap" type="com.csswust.patest2.entity.ExamNotice" >
        <id column="exa_not_id" property="exaNotId" jdbcType="INTEGER" />
        <result column="exam_id" property="examId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.csswust.patest2.entity.ExamNotice" extends="BaseResultMap" >
        <result column="content" property="content" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        exa_not_id, exam_id, create_time, modify_time
    </sql>
    <sql id="Blob_Column_List" >
        content
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from exam_notice
        where exa_not_id = #{exaNotId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from exam_notice
        where exa_not_id = #{exaNotId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.csswust.patest2.entity.ExamNotice" useGeneratedKeys="true" keyProperty="exaNotId" >
        insert into exam_notice (exam_id, create_time, modify_time, 
            content)
        values (#{examId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
            #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.csswust.patest2.entity.ExamNotice" useGeneratedKeys="true" keyProperty="exaNotId" >
        insert into exam_notice
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="examId != null" >
                exam_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="content != null" >
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="examId != null" >
                #{examId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null" >
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.csswust.patest2.entity.ExamNotice" >
        update exam_notice
        <set >
            <if test="examId != null" >
                exam_id = #{examId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where exa_not_id = #{exaNotId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.csswust.patest2.entity.ExamNotice" >
        update exam_notice
        set exam_id = #{examId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            content = #{content,jdbcType=LONGVARCHAR}
        where exa_not_id = #{exaNotId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.csswust.patest2.entity.ExamNotice" >
        update exam_notice
        set exam_id = #{examId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP}
        where exa_not_id = #{exaNotId,jdbcType=INTEGER}
    </update>
</mapper>